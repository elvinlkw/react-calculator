{"version":3,"sources":["components/Buttons.jsx","components/Display.jsx","components/App.jsx","index.js"],"names":["Buttons","val","includes","_this","this","react_default","a","createElement","className","concat","isOperator","props","children","onClick","Component","Display","_this$props","input","output","toString","length","toFixed","toPrecision","id","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","storage","addToDisplay","bind","assertThisInitialized","handleEqual","handleCharacter","clearAll","listenKeyboardEvent","console","log","document","addEventListener","event","keyPress","key","isNaN","setState","substr","math","e","alert","_this$state","components_Display","components_Buttons","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.8e661b61.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './../style/Buttons.css';\r\n\r\nclass Buttons extends Component {\r\n    isOperator(val){        \r\n        var operator = ['×', '÷', '−', '+', '='];\r\n        var special = ['AC', '±', '%'];\r\n\r\n        if(val === '0'){\r\n            return ' zero'\r\n        } else if(operator.includes(val)){\r\n            return ' operator'\r\n        } else if(special.includes(val)){\r\n            return ' special'\r\n        }\r\n        else{\r\n            return ''\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className={`col${this.isOperator(this.props.children)}`} onClick={()=>this.props.onClick(this.props.children)}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React, { Component } from 'react';\r\nimport './../style/Display.css';\r\n\r\nclass Display extends Component {\r\n    render() { \r\n        var {input, output} = this.props\r\n        if(output < 1 && output.toString().length > 7){\r\n            output = output.toFixed(7);\r\n        } else if(output > 1 && output.toString().length > 7){\r\n            output = output.toPrecision(4);\r\n        }\r\n        return (\r\n            <div id=\"display-wrapper\">\r\n                <span id=\"input\">{input}</span>\r\n                <span id=\"display\">{output}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;","import React, { Component } from 'react';\r\nimport * as math from 'mathjs';\r\nimport Buttons from './Buttons';\r\nimport Display from './Display';\r\nimport './../style/App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);  \r\n        this.state={\r\n            input: '',\r\n            output: 0,\r\n            storage: 0\r\n        }\r\n        this.addToDisplay = this.addToDisplay.bind(this);\r\n        this.handleEqual = this.handleEqual.bind(this);\r\n        this.handleCharacter = this.handleCharacter.bind(this);\r\n        this.clearAll = this.clearAll.bind(this);\r\n        this.listenKeyboardEvent = this.listenKeyboardEvent.bind(this);\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(this.state);\r\n    }\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.listenKeyboardEvent , false);\r\n    }\r\n    listenKeyboardEvent(event){\r\n        var keyPress = event.key;\r\n        var operator = ['*', '/', '+', '-', '.']\r\n        console.log(keyPress);\r\n        if(!isNaN(keyPress) || operator.includes(keyPress)){\r\n            this.addToDisplay(keyPress);\r\n        } else if (keyPress === 'Backspace'){\r\n            this.setState({\r\n                input: this.state.input.substr(0, this.state.input.length-1)\r\n            });\r\n        } else if (keyPress === 'Enter'){\r\n            this.handleEqual();\r\n        }\r\n    }\r\n    clearAll(){\r\n        // Reset all states when 'AC' key is pressed\r\n        this.setState({\r\n            input: '',\r\n            output: 0,\r\n            storage: 0\r\n        });\r\n    }\r\n    handleCharacter(val){\r\n        if(val === '%'){\r\n            if(this.state.input === ''){\r\n                this.setState({\r\n                    output: 0,\r\n                    storage: 0\r\n                });\r\n            } else{\r\n                this.setState({\r\n                    output: math.eval(this.state.input) / 100,\r\n                    storage: math.eval(this.state.input) / 100\r\n                });\r\n            }\r\n        }else{\r\n            // Handler for pressing '+/-' key \r\n            if(this.state.storage[0] === '-'){\r\n                this.setState({\r\n                    input: this.state.storage.substr(1),\r\n                    storage: this.state.storage.substr(1)\r\n                })\r\n            } else if(this.state.storage === 0){\r\n                this.setState({\r\n                    input: '-' + this.state.input,\r\n                    storage: '-' + this.state.input\r\n                });\r\n            } else{\r\n                this.setState({\r\n                    input: '-' + this.state.storage,\r\n                    storage: '-' + this.state.storage\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleEqual(){        \r\n        try{\r\n            this.setState({\r\n                output: math.eval(this.state.input),\r\n                storage: math.eval(this.state.input).toString()\r\n            });\r\n        } catch(e){\r\n            alert('Invalid Operation');\r\n            this.setState({\r\n                input: this.state.output,\r\n                storage: this.state.output\r\n            });\r\n        }\r\n        \r\n    }\r\n    addToDisplay(val){\r\n        var operator = ['*', '/', '+', '-']\r\n        if(val === \"×\"){\r\n            val = \"*\";\r\n        } else if(val === \"÷\"){\r\n            val = \"/\"\r\n        } else if(val === \"−\"){\r\n            val = \"-\"\r\n        }\r\n        if(this.state.storage !== 0 && !operator.includes(val)){\r\n            this.setState({\r\n                input: val,\r\n                storage: 0\r\n            });\r\n        } else if(this.state.storage === 0){\r\n            this.setState({\r\n                input: this.state.input + val\r\n            });\r\n        } else{\r\n            this.setState({\r\n                input: this.state.storage + val,\r\n                storage: 0\r\n            })\r\n        }\r\n    }\r\n    render() { \r\n        var {input, output} = this.state;\r\n        return (\r\n            <div id=\"main\">\r\n                <div id=\"page-title\">\r\n                    <h1>Calculator App</h1>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Display input={input} output={output}/>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Buttons onClick={this.clearAll}>AC</Buttons>\r\n                        <Buttons onClick={this.handleCharacter}>&plusmn;</Buttons>\r\n                        <Buttons onClick={this.handleCharacter}>%</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>&divide;</Buttons>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Buttons onClick={this.addToDisplay}>7</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>8</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>9</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>&times;</Buttons>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Buttons onClick={this.addToDisplay}>4</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>5</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>6</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>&minus;</Buttons>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Buttons onClick={this.addToDisplay}>1</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>2</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>3</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>+</Buttons>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Buttons onClick={this.addToDisplay}>0</Buttons>\r\n                        <Buttons onClick={this.addToDisplay}>.</Buttons>\r\n                        <Buttons onClick={this.handleEqual}>=</Buttons>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App/>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}