{"version":3,"sources":["components/Buttons.jsx","components/Display.jsx","components/App.jsx","index.js"],"names":["Buttons","val","includes","_this","this","react_default","a","createElement","className","concat","isOperator","props","children","onClick","Component","Display","_this$props","input","output","id","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","storage","addToDisplay","bind","assertThisInitialized","handleEqual","handleCharacter","clearAll","setState","math","_this$state","components_Display","components_Buttons","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9fe6e60c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './../style/Buttons.css';\r\n\r\nclass Buttons extends Component {\r\n    isOperator(val){        \r\n        var operator = ['×', '÷', '−', '+', '='];\r\n\r\n        if(val === '0'){\r\n            return 'col zero'\r\n        } else if(operator.includes(val)){\r\n            return 'col operator'\r\n        }else{\r\n            return 'col'\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className={`${this.isOperator(this.props.children)}`} onClick={()=>this.props.onClick(this.props.children)}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React, { Component } from 'react';\r\nimport './../style/Display.css';\r\n\r\nclass Display extends Component {\r\n    render() { \r\n        var {input, output} = this.props\r\n        return (\r\n            <div id=\"display-wrapper\">\r\n                <span id=\"input\">{input}</span>\r\n                <span id=\"display\">{output}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;","import React, { Component } from 'react';\r\nimport * as math from 'mathjs';\r\nimport Buttons from './Buttons';\r\nimport Display from './Display';\r\nimport './../style/App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);  \r\n        this.state={\r\n            input: '',\r\n            output: 0,\r\n            storage: 0\r\n        }\r\n        this.addToDisplay = this.addToDisplay.bind(this);\r\n        this.handleEqual = this.handleEqual.bind(this);\r\n        this.handleCharacter = this.handleCharacter.bind(this);\r\n        this.clearAll = this.clearAll.bind(this);\r\n    }\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n    clearAll(){\r\n        this.setState({\r\n            input: '',\r\n            output: 0\r\n        });\r\n    }\r\n    handleCharacter(val){\r\n        if(val === '%'){\r\n            this.setState({\r\n                output: math.eval(this.state.input) / 100,\r\n                storage: math.eval(this.state.input) / 100\r\n            });\r\n        }else{\r\n            this.setState({\r\n                output: '-' + math.eval(this.state.input),\r\n                storage: '-' + math.eval(this.state.input)\r\n            });\r\n        }\r\n    }\r\n    handleEqual(){\r\n        this.setState({\r\n            output: math.eval(this.state.input),\r\n            storage: math.eval(this.state.input)\r\n        })\r\n    }\r\n    addToDisplay(val){\r\n        if(val === \"×\"){\r\n            val = \"*\";\r\n        } else if(val === \"÷\"){\r\n            val = \"/\"\r\n        } else if(val === \"−\"){\r\n            val = \"-\"\r\n        }\r\n\r\n        if(this.state.storage === 0){\r\n            this.setState({\r\n                input: this.state.input + val\r\n            });\r\n        }else{\r\n            this.setState({\r\n                input: this.state.storage + val,\r\n                storage: 0\r\n            })\r\n        }\r\n        \r\n    }\r\n    render() { \r\n        var {input, output} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Display input={input} output={output}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Buttons onClick={this.clearAll}>AC</Buttons>\r\n                    <Buttons onClick={this.handleCharacter}>&plusmn;</Buttons>\r\n                    <Buttons onClick={this.handleCharacter}>%</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>&divide;</Buttons>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Buttons onClick={this.addToDisplay}>7</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>8</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>9</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>&times;</Buttons>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Buttons onClick={this.addToDisplay}>4</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>5</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>6</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>&minus;</Buttons>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Buttons onClick={this.addToDisplay}>1</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>2</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>3</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>+</Buttons>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Buttons onClick={this.addToDisplay}>0</Buttons>\r\n                    <Buttons onClick={this.addToDisplay}>.</Buttons>\r\n                    <Buttons onClick={this.handleEqual}>=</Buttons>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App/>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}